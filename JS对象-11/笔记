; JS对象

; 什么是对象
对象是 一个具体事物         列如 一本书 一个人等

在JavaScript中 对象是一组无序的相关属性和方法的集合 所有的事物都是对象 例如 字符串 数值 数组 函数等

对象是由 属性 和 方法 组合的
属性: 事物的 特征 在对象中用 属性 来表示(常用名词)
方法: 事物的 行为 在对象中用 方法 来表示(常用动词)

; 为什么需要对象
保存一个值时 可以使用 变量 保存多个值(一组值)时 可以使用 数组 如果要保存一个人的完整信息呢？

JS对象表达结构更清晰 更强大

; 创建对象的三个方式   对象-object
1. 利用 字面量 创建对象
2. 利用 new object 创建对象
3. 利用 构造函数 创建对象

; 利用 字面量 创建对象
对象字面量 : 就是花括号{}里面包含了表达这个具体事物(对象)的属性和方法

; 1. 利用 字面量 创建对象{}

(1) 里面的属性或方法我们采取键值对的形式   键 属性名 : 值 属性值
(2) 多个属性或者方法中间用逗号隔开的
(3) 方法冒号后面跟的是一个匿名函数

; 2. 使用对象

(1) 调用对象的属性 我们采用 对象名,属性名 我们理解为 的
(2) 调用属性还有一种方法 对象名['属性名']
(3) 调用对象的方法 sayhi 对象名.方法名() 千万别忘记添加小括号

整体:
    var obj = {};  // 创建了一个空的对象
    var obj = {
        uname: '张三疯',
        age: 18,
        sex: '男',
        sayHi: function () {
            console.log('Hi~');
        }
    }
    console.log(obj.uname);
    console.log(obj['age']);
    obj.sayHi();

; 变量 属性 函数 方法的区别

; 1. 变量和属性的相同的 他们都是用来存储数据的

变量 单独声明并赋值 使用的时候直接写变量名 单独存在
属性 在对象里面的不需要声明的 使用的时候必须是 对象.属性

; 2. 函数和方法的相同点 都是实现某种功能 做某件事

函数是单独声明 并且调用的 函数名() 单独存在的
方法 在对象里面 调用的时候 对象.方法


; 利用 new object 创建对象

(1) 我们是利用 等号 = 赋值的方法 添加对象的属性和方法
(2) 每个属性个方法之间用 分号结束

整体:
    var obj = new Object(); // 创建了一个空的对象
    obj.uname = '张三疯';
    obj.age = 18;
    obj.sex = '男';
    obj.sayHi = function () {
        console.log('Hi~');
    }
    console.log(obj.uname);
    console.log(obj['age']);
    obj.sayHi();


; 利用 构造函数 创建对象

; 为什么需要使用构造函数

就是因为我们前面两种构建对象的方式一次只能创建一个对象
因为我们一次创建一个对象 里面很多的属性和方法是大量相同的 我们只能复制
因此我们可以利用函数的方法 重复这些相同的代码 我们就把这个函数称为 构造函数
又因为这个函数不一样 里面封装的不是普通代码 而是 对象
那么构造函数 就是把我们对象里面一些相同的属性和方法抽象出来封装到函数里面

构造函数的语法格式
function 构造函数名() {
    this.属性 = 值;
    this.方法 = function () {
    }
}
new 构造函数名();

1. 构造函数名字首字母要大写
2. 构造函数不需要 return 就可以返回结果
3. 我们构造函数 必须使用 new
4. 我们只要new Star() 调用函数就创建一个对象 ldh {}
5. 我们的属性和方法 前面必须添加 this.

; 构造函数和对象的区别
对象 是一个具体的事物 

1. 构造函数  明星 泛指的某一大类 它类似于 java 语言里面的 类(class)
2. 对象 是一个具体的事物
3. 我们利用构造函数创建对象的过程 我们也称为对象实例化

new 关键字执行过程

1. new 构造函数可以在内存中创建一个空的对象
2. this 就会指向刚才创建的空对象
3. 执行构造函数里面的代码 给这个空对象添加属性和方法
4. 返回这个对象-new可以返回，所以不需要return

; for..in 循环