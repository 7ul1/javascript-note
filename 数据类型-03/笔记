; 数据类型

; 为社么需要数据类型
在计算机中 不同的的数据所需占用的储存空间是不同的 为了便于把数据分成所需内存大小不同的数据 充分利用储存空间 于是定义了不同的数据类型

; 变量的数据类型
变量是用来储存值的所在处 他们有名字和数据类型 
变量的数据类型决定了如何将这些值的位存储到计算机的内存中
JavaScript 是一种弱类型或者说动态语言 这意味着不同提前声明变量的类型 在程序运行过程中 类型会被自动确定

var num = 10; // num 属于数字型
var str = 'pink'; // str 字符串型

在代码运行时 变量的数据类型是由 js 引擎根据 = 右边变量值的数据类型来判断的 运行完毕后 变量就确定了数据类型

JavaScript 拥有动态类型 同时也意味着相同的变量可用作不同的类型

var x = 6;  // x为数字
var x = 'Bill'; // x为字符串

; 数据类型的分类

两大类：
1.简单数据类型
    五大类：
        1.Number 数字型 包含 整型值和浮点型值 如 21、0.21  默认值 0 
        2.Boolean 布尔值类型 如 true、false、等价于 1 和 0 默认值 false
        3.String 字符串类型 如"张三" 注意在 js 里面 字符串都带有引号 默认值 ""
        4.Undefined var a；声明了变量 a 但是没有给值 此时 a = undefined 默认值 underfined
        5.Null var a = null；声明了变量 a 为空值 默认值 null

            Number:
                进制：
                    1.八进制 在数字前面加 0 
                    2.十六进制 在数字前面加 0x 后面 a 表示10
                数字型范围:
                    ;数字型的最大值
                    console.log(Number.MAX_VALUE)；
                    ;数字型的最小值
                    console.log(Number.MIN_VALUE)；
                数字型三个特殊值：
                    ;无穷大
                    console.log(Number.MAX_VALUE * 2);    // Infinity 无穷大
                    ;无穷小
                    console.log(-Number.MAX_VALUE * 2);   // -Infinity 无穷大
                    ;非数值
                    console.log('pink老师' - 100);  // NaN 

            isNaN:
                isNaN(x):
                x 是数字 返回 false
                x 不是数字 返回 true 

            String:
                字符串型可以是引导中的任意文本 其语法为 双引号"" 和 单引号''
                // 'pink'   'pinlk老师'   '12'  加了引号的都是字符串型

                在html标签里面的属性使用的是双引号 JS 这里我们更 推荐是同单引号

                ; 字符串引号嵌套
                JS 可以用 单引号嵌套双引号 或者用 双引号嵌套单引号（外双内单，外单内双）

                ; 字符串转义符
                转义符都是以 \ 开头的

                \n 换行符 n 是newline 的意思
                \\ 斜杠\
                \' ' 单引号
                \" "双引号
                \t tab 缩进
                \b 空格 b 是 blank 的意思

                ; 字符串长度
                字符串是由若干字符组成的 这些字符的数量就是字符串长度 通过字符串的 length 属性可以获取整个字符串的长度

                ; 字符串拼接
                多个字符串之间可以使用 + 进行拼接 其拼接方式为 字符串 + 任何类型 = 拼接后的新字符串
                
                + 号总结口诀：数值相加 字符相连

                ; 字符串加强
                我们经常会将字符串和变量来拼接 因为变量可以很方便地修改里面的值
                变量是不能添加引号的 因为加引号的变量会变成字符串
                如果变量两侧都有字符串拼接 口诀 “引引加加” 删掉数字 变量写加中间

            布尔型:
                true 参与加法运算当1来看
                false 参与运算当0看

            Undefined 和 Null:
                一个声明后没有被赋值的变量会有一个默认值 undefined （如果进行相连或相加时 注意结果）
                一个声明变量给 null 值 里面存的值为空 （学习对象时 我们继续研究null）


2.复杂数据类型

; 获取检测变量的数据类型
typeof 可用来获取检测变量的数据类型

; 字面量
字面量是在源代码中一个固定值的表示法 通俗来说 就是字面量表示如何表达这个值
1.数字字面量: 8,9,10
2.字符串字面量:'黑马程序员',"大前端"
3.布尔字面量:true,false

; 什么是数据类型转换
使用表单、prompt获取过来的数据默认是字符串类型的 此时就不能直接简单的进行加法运算 而需要转换变量的数据类型 通俗来说 就是 把一种数据类型的变量转换成另一种数据类型

; 通常使用的三种转换方式
1.转换为字符串类型
2.转换为数字型
3.转换为布尔型

; 转换为字符串
toString()		转成字符串		var num = 1； alert(num.toString())；
String()强制准换		转成字符串		var num = 1； alert(String(num))；
加号拼接字符串		和字符串拼接的结果都是字符串		var num = 1； alert(num + "我是字符串")；

注：
toString() 和 String() 使用方式不一样
三种转换方式 更倾向于第三种加号拼接字符串方式 这一种方式也称之为隐式转换

; 转换为数字型（重点！！！！！！！！！）
parseInt(string)函数	将string类型转成整数数值型		parseInt('78')
parseFloat(string)函数	将string类型转成浮点数数值型	parseFloat('78.21')
Number()强制转换函数	将string类型转换为数值型		Number('12')
js隐式转换(- * /)	利用算术运算隐式转换为数值型		'12' - 0

; 转换为布尔型
Boolean()函数	其他类型转成布尔值		Boolean('true')；
1.代表 空、否定的值 会被转换为 false 如 ''、0、NaN、null、undefined
2.其余值都会被转换为 true

; 标识符
指开发人员为变量、属性、函数、参数取的名字
标识符不能是关键字或保留字

; 关键字
指JS本身已经使用的字 不能再用它们充当变量名、方法名

; 保留字
预留的‘关键字’ 现在不用 将来会用 