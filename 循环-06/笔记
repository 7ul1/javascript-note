; 循环的目的
循环的目的 可以重复执行某些代码

在 JS 中 有三种类型的循环语句:

1.for循环
2.while循环
3.do...while循环

; for循环

在程序中 一组被重复执行的语句被称为 循环体 能否继续重复执行 取决于循环的 终止条件
由循环体及循环的终止条件组成的语句 被称为 循环语句

; 语法结构

for循环主要用于把某些代码循环若干次 通常跟计数有关系 结构如下:

for(初始化变量；条件表达式；操作表达式){
    // 循环体
}

; 执行过程

1.首先执行里面的计数器变量 var i = 1 但这句话在 for 里面只执行一次 index
2.去 i <= 100 来判断是否满足条件 如果满足条件 就去执行 循环体 不满足条件退出循环体
3.最后去执行 i++ i++是单独写的代码 递增 第一轮结束
4.接着去执行 i <= 100 如果满足条件 就去执行循环体 不满足退出循环体 第二轮结束

; for循环执行不同代码

for循环可以重复执行不同的代码 因为我们有计数器变量 i 的存在 i 每次循环都会变化
我们想要输出一个人 1~100岁

for (var i = 1； i <= 100； i++) {
    console.log('这个人今年' + i + '岁')；
}

;for 循环可以执行相同的代码

for (var i = 1； i <= 10； i++) {
    console.log('ABC');
} 

;可以让用户控制输出次数

var num = prompt('请你输入次数');
for (var i = 1； i <= num； i++) {
    console.log('吃席！！！');
}

; 双重for循环

很多情况下 单层for循环并不能满足我们的需求 比如我们要打印一个五行五列的图形 打印一个倒直角三角形等 此时就可以通过循环嵌套来实现

循环嵌套 是指 在一个循环语句中再定义一个循环语句的语法结构 例如在for循环语句中 可以再嵌套一个for循环 这样的for循环语句 我们称之为 双重for循环

; for循环总结

for循环可以重复执行某些相同代码
for循环可以重复执行些许不同的代码，因为我们有计数器
for循环可以重复执行某些操作，比如算术运算符加法操作
随着需求增加，双重for循环可以做更多、更好看的效果
双重for循环，外层循环一次，内层for循环全部执行
for循环是循环条件和数字直接相关的循环

( 分析比写代码更重要！！！！！！！！！！！ )
一些核心算法想不到 但是要学会 分析它执行过程
举一反三！！！！

; while循环

while 循环语法结构 while 当...的时候

while (条件表达式) {
    // 循环体
}

执行思路 当条件表达式结果为 true 则执行循环体 否则退出我们的循环

里面应该也有计数器 初始化变量
里面也应该有我们的操作表达式 完成计数器的更新 防止死循环

; do while 循环

; 语法结构

do {
    // 循环体
} while (条件表达式);

; 执行思路

跟 while 不同的地方在于 do while 先执行一次循环体 再判断条件 如果条件表达式结果为真 则继续执行循环体 否则退出循环

do while 循环体至少执行一次

; 循环小结
有仨:  for   while   do while

三个循环很多情况都可以相互替换使用
如果用来计次数 跟数字相关的 三者使用基本相同 但是我们更喜欢for
wgile 和 do while 可以做更复杂的判断条件 必 for 循环灵活
wgile 和 do while 执行顺序不同 while 先判断后执行 do while先执行一次 后再判断执行
wgile 和 do while 执行次数不一样 do while 至少会执行一次循环体 而 while 可能一次都不执行
实际工作常用 for 循环语句 重点！！！！！！！

; continue break

; continue 关键字
用于立即 跳出本次循环 继续下一次循环(本次循环体中 continue 之后的代码就会少执行一次)

; break 关键字
用于立即 跳出整个循环









