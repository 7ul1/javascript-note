1.if分支语句
2.switch分支语句
3.三元表达式

; 流程控制
简单地说就是来控制我们的代码按照什么结构顺序来执行的

; 流程控制的三种结构（也代表三种代码执行顺序）
顺序结构    分支结构    循环结构

; 顺序结构：
按照代码顺序进行执行（依次执行）

; 分支结构：
会选择判断来进行执行（根据不同的条件 执行不同的路径代码 从而得到不同的结果）

; 两种分支语句：
1.if语句
2.switch语句

; if语句
if (条件表达式) {
    // 执行语句
}

; 执行思路:
如果 if 里面的表达式结果为真 true 则执行大括号里面的 执行语句
如果 if 条件表达式结果为假 则不执行大括号里面的语句 则执行 if 语句后面的代码

语句可以理解为一个行为 循环语句和分支语句就是典型的语句
一个程序由很多个语句组成 一般情况下 会分割成一个一个的语句

; else双分支语句:

; else 后面直接跟大括号
if (条件表达式) {
    // 执行语句1
} else {
    //执行语句2
}

; 执行思路:
如果表达式结果为真 那么执行语句1 否则 执行语句2

if 里面的语句1 和 else 里面的语句2 最终只能有一个语句执行

; if else if 语句（多分支语句）
1. 多分支语句 就是利用多个条件来选择不同的语句执行 得到不同的结果 多选1 的过程
2. if else if 语句是多分支语句
3. 语法规范：

if (条件表达式1) {
    // 语句1
} else if (条件表达式2) {
    // 语句2
} else if (条件表达式3) {
    // 语句3
} else {
    // 最后的语句
}

; 4. 执行思路
如果条件表达式1 满足就执行 执行完毕后 推出整个if 分支语句
如果条件表达式1 不满足 则判断条件表达式2 满足的话 执行语句2 以此类推
如果上面的所有条件表达式都不成立 则执行else 里面的语句

; 5.注意点
(1)多分支语句还是多选1 最后只能有一个语句执行
(2)else if 里面的条件理论上是可以任意多个的
(3)else if 中间有个空格！！！

; 三元表达式

1. 有三元运算符组成的式子我们称为三元表达式
2. ++num   3 + 5     ? :
; 3. 语法结构
条件表达式 ? 表达式1 : 表达式2
; 4. 执行思路
如果条件表达式结果为真 则 返回 表达式1 的值 如果条件表达式结果为假 则返回 表达式2 的值
; 5. 代码体验

var num = 10;
var result = num > 5 ? '是的' : '不是的'
;我们知道表达式是有返回值的
console.log(result);

; 三元表达式 等同于 if else

if (num > 5) {
    result = '是的';
} else {
    result = '不是的';
}

; switch语句
用于基于不同的条件来执行不同的代码 当要针对变量设置一系列的特定值的选项时 就可以使用switch

1. switch 语句也是多分支语句 也可以实现多选1

2. 语法结构 switch 转换、开关    case 小例子或者选项的意思

switch (表达式) {
    case value1:
        执行语句1;
        break;
    case value2:
        执行语句2;
        break;
    default:
        执行最后的语句;
}
3. 执行思路 利用我们表达式的值 和 case 后面的选项值相匹配 如果匹配上 就执行该 case 里面的语句 如果都没有匹配上 那么执行 default 里面的语句



循环结构：
让代码反复执行

