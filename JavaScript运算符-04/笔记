; JavaScript运算符

; 运算符
运算符也被称为 操作符 用于实现 赋值 比较 和 执行算术运算等功能的符号
比如：加减乘除类....

; JavaScript常见运算符
1.算数运算符
2.递增和递减运算符
3.比较运算符
4.逻辑运算符
5.赋值运算符

; 算数运算符

浮点数 算术运算里面有问题
不能直接判断两个浮点数是否相等

; 概念
算术运算使用的符号 用于执行两个变量或值的算术运算

+   加              10 + 20 = 30
-   减              10 - 20 = -10
*   乘              10 * 20 = 200
/   除              10 / 20 = 0.5
&   取余数(取模)    返回除法的余数 9 % 2 = 1

; 怎么判断一个数能够被整除？
它的余数是0 就说明这个数能被整除 这就是 % 取余运算符的主要用途

; 1 + 2 * 3 = ?
结果是 7 注意算术运算符优先级的 先乘除 后加减 有小括号先算小括号里面的

; 表达式和返回值
表达式: 是由数字、运算符、变量等以能求得数值的有意义排列方法所得的组合
简单理解: 是由数字、运算符、变量等组成的式子

表达式最终都会有一个结果 返回给我们 我们称为返回值

; 递增和递减运算符

概述: 我们需要反复给数字变量添加或减去1 可以使用 递增（++）和 递减（--）运算符 来完成

在JavaScript中 递增（++）和 递减（--） 既可以放在变量前面 也可以放在变量后面 
放在变量前面时 我们可以称为 前置递增（递减）运算符
放在变量后面时 我们可以称为 后置递增（递减）运算符

; 前置递增运算符

++num 前置递增 就是自加 1 类似于 num = num + 1 但是 ++num 写起来更简单

; 后置递增运算符

口诀：先返回原值 后自加 1

; 比较运算符
; 以下几种
> 大于
< 小于
>= 大于等于
<= 小于等于
== 等于
!= 不等于
=== 全等于
!== 不全等于

= 赋值 把右边给左边
== 判断 判断两边的值是否相等（注意此时有隐藏转换）
=== 全等 判断两边的值和数据类型是否完全相同

; 逻辑运算符
概念：逻辑运算符是用来进行布尔值运算的运算符 其返回值也是布尔值 后面开发中经常用于多个条件的判断

; 以下几种
&&  "逻辑与" 简称"与" and   true && false
||  "逻辑或" 简称"或" or    true || false
!   "逻辑非" 简称"非" not   !true

1. 逻辑与 && and 两侧都为 true 结果才为 true 只要一侧为 false 结果就是 false
2. 逻辑或 || or  两侧都为假false 结果才为假 false 只要一侧为true 结果就是true
3. 逻辑非 ! not 


; 短路运算（逻辑中断）
当有多个表达式（值）时 左边的表达式值可以确定结果时 就不再继续运算右边的表达式的值


; 逻辑与
语法:表达式1 && 表达式2
如果第一个表达式的值为真 则返回表达式2
如果第一个表达式的值为假 则返回表达式1

; 逻辑或
语法:表达式1 || 表达式2
如果第一个表达式的值为真 则返回表达式1
如果第一个表达式的值为假 则返回表达式2

; 赋值运算符
概念: 用来把数据赋值给变量的运算符
= 直接赋值 var usrName = '我是值'
+=、-= 加、减一个数后再赋值 var age = 10； age += 5； // 15
*=、/=、%= 乘、除、取模后再赋值 var age = 2； age*=5； // 10

; 运算符优先级
优先级 运算符 顺序
 1 小括号 ()
 2 一元运算符 ++ -- !
 3 算数运舞符 先* / % 后 + -
 4 关系运算符 > >= < <=
 5 相等运算符 == != === !==
 6 逻辑运算符 先 && 后 ||
 7 赋值运算符 =
 8 逗号运算符 ,